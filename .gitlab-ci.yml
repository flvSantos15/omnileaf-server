# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Nodejs.gitlab-ci.yml

# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/node/tags/
image: node:16.14-alpine

variables:
  DOCKER_IMAGE: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
  DOCKER_CONTAINER: backend_$CI_COMMIT_REF_NAME

cache:
  paths:
    - node_modules/

stages:
  - install_dev
  - install_prod
  - publish
  - release

install_dev:
  stage: install_dev

  script:
    - cat $ENV_FILE > .env
    - yarn
    - yarn build
  artifacts:
    paths:
      - node_modules/
      - build/

install_prod:
  stage: install_prod
  environment:
    name: production
  script:
    - yarn
    - yarn build
    - cp $ENV_FILE ./build
  artifacts:
    paths:
      - node_modules/
      - build/
  only:
    - main

publish:
  stage: publish
  script:
    - apk add --no-cache docker-compose
    - docker-compose build
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push $DOCKER_IMAGE

release:
  stage: release
  script:
    - chmod og= $ID_RSA
    - apt-get update && apt-get install -y openssh-client
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker rmi -f $DOCKER_IMAGE || true"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull $DOCKER_IMAGE"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f -v $DOCKER_CONTAINER || true"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run --name $DOCKER_CONTAINER --memory="2g" --net backend-network -d $DOCKER_IMAGE"
