version: '3.8'
services:
  app:
    build: .
    container_name: nodejs-omni
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV}
      DB_HOST: db
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '${PORT}:${PORT}'
    command: >
      bash -c "./init-app.sh"
    networks:
      - app-network
    depends_on:
      - db
  db:
    image: postgres:alpine3.14
    container_name: postgres-omni
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_MULTIPLE_DATABASES: '${DEV_DB},${DEV_DB_USER},${DEV_DB_PASSWORD}:${STAGE_DB},${STAGE_DB_USER},${STAGE_DB_PASSWORD}:${PROD_DB},${PROD_DB_USER},${PROD_DB_PASSWORD}'
      DB_HOST: db
    volumes:
      - ./backup/postgres:/data
      - ./Docker/postgres:/docker-entrypoint-initdb.d
    ports:
      - '${DB_PORT}:${DB_PORT}'
    networks:
      - app-network
  nginx:
    image: jonasal/nginx-certbot:latest
    restart: unless-stopped
    container_name: proxy_reverse-omni
    environment:
      CERTBOT_EMAIL: ${CERTBOT_EMAIL}
      RENEWAL_INTERVAL: ${RENEWAL_INTERVAL}
    ports:
      - 80:80
      - 443:443
    volumes:
      - letsencrypt:/etc/letsencrypt
      - ./Docker/nginx/user_conf.d:/etc/nginx/user_conf.d
    depends_on:
      - app

networks:
  app-network:
    driver: bridge

volumes:
  letsencrypt:
